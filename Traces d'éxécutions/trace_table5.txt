TABLE 5 :

=== Ordonnancement ===
Entrez le nom du fichier de contraintes (ex: contraintes.txt) : table 5.txt

--- Tableau de contraintes ---
Tâche 1 : durée = 2.0, prédécesseurs = []
Tâche 2 : durée = 5.0, prédécesseurs = []
Tâche 3 : durée = 4.0, prédécesseurs = [1]
Tâche 4 : durée = 2.0, prédécesseurs = [2, 3]
Tâche 5 : durée = 5.0, prédécesseurs = [4]
Tâche 6 : durée = 5.0, prédécesseurs = [5]
Tâche 7 : durée = 9.0, prédécesseurs = [6]
Tâche 8 : durée = 2.0, prédécesseurs = [7]
Tâche 9 : durée = 5.0, prédécesseurs = [8]
Tâche 10 : durée = 1.0, prédécesseurs = [11]
Tâche 11 : durée = 1.0, prédécesseurs = [4]
Tâche 12 : durée = 1.0, prédécesseurs = [3]
Tâche 13 : durée = 9.0, prédécesseurs = [6, 12]

--- Création du graphe d'ordonnancement ---
15 sommets
18 arcs
0 -> 1 = 0
0 -> 2 = 0
1 -> 3 = 2.0
2 -> 4 = 5.0
3 -> 4 = 4.0
3 -> 12 = 4.0
4 -> 5 = 2.0
4 -> 11 = 2.0
5 -> 6 = 5.0
6 -> 7 = 5.0
6 -> 13 = 5.0
7 -> 8 = 9.0
8 -> 9 = 2.0
9 -> 14 = 5.0
10 -> 14 = 1.0
11 -> 10 = 1.0
12 -> 13 = 1.0
13 -> 14 = 9.0

--- Matrice des valeurs ---
             0        1        2        3        4        5        6        7        8        9       10       11       12       13       14
   0       0.0      0.0      0.0        *        *        *        *        *        *        *        *        *        *        *        *
   1         *      0.0        *      2.0        *        *        *        *        *        *        *        *        *        *        *
   2         *        *      0.0        *      5.0        *        *        *        *        *        *        *        *        *        *
   3         *        *        *      0.0      4.0        *        *        *        *        *        *        *      4.0        *        *
   4         *        *        *        *      0.0      2.0        *        *        *        *        *      2.0        *        *        *
   5         *        *        *        *        *      0.0      5.0        *        *        *        *        *        *        *        *
   6         *        *        *        *        *        *      0.0      5.0        *        *        *        *        *      5.0        *
   7         *        *        *        *        *        *        *      0.0      9.0        *        *        *        *        *        *
   8         *        *        *        *        *        *        *        *      0.0      2.0        *        *        *        *        *
   9         *        *        *        *        *        *        *        *        *      0.0        *        *        *        *      5.0
  10         *        *        *        *        *        *        *        *        *        *      0.0        *        *        *      1.0
  11         *        *        *        *        *        *        *        *        *        *      1.0      0.0        *        *        *
  12         *        *        *        *        *        *        *        *        *        *        *        *      0.0      1.0        *
  13         *        *        *        *        *        *        *        *        *        *        *        *        *      0.0      9.0
  14         *        *        *        *        *        *        *        *        *        *        *        *        *        *      0.0

--- Détection de circuit ---
Points d'entrée initiaux : [0]
Iteration 1 - Points d'entrée : [0]
Sommets restants : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
Iteration 2 - Points d'entrée : [1, 2]
Sommets restants : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
Iteration 3 - Points d'entrée : [2, 3]
Sommets restants : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
Iteration 4 - Points d'entrée : [3]
Sommets restants : [5, 6, 7, 8, 9, 10, 11, 13, 14]
Iteration 5 - Points d'entrée : [4, 12]
Sommets restants : [6, 7, 8, 9, 10, 13, 14]
Iteration 6 - Points d'entrée : [12, 5, 11]
Sommets restants : [6, 7, 8, 9, 10, 13, 14]
Iteration 7 - Points d'entrée : [5, 11]
Sommets restants : [7, 8, 9, 10, 13, 14]
Iteration 8 - Points d'entrée : [11, 6]
Sommets restants : [7, 8, 9, 13, 14]
Iteration 9 - Points d'entrée : [6, 10]
Sommets restants : [8, 9, 14]
Iteration 10 - Points d'entrée : [10, 7, 13]
Sommets restants : [8, 9, 14]
Iteration 11 - Points d'entrée : [7, 13]
Sommets restants : [9, 14]
Iteration 12 - Points d'entrée : [13, 8]
Sommets restants : [9, 14]
Iteration 13 - Points d'entrée : [8]
Sommets restants : [14]
Iteration 14 - Points d'entrée : [9]
Sommets restants : Aucun
Iteration 15 - Points d'entrée : [14]
Sommets restants : Aucun
-> Il n'y a pas de circuit

-> Le graphe est un graphe d'ordonnancement valide.

->Le graphe ne contient pas d'arcs à valeur négative

->Le graphe ne contient pas de circuits

Ordre topologique (rangs des sommets) : [0, 1, 2, 3, 4, 12, 5, 11, 6, 10, 7, 13, 8, 9, 14]

--- Calendriers ---
Calendrier au plus tôt (dates_min) :
  Nœud 0 : 0
  Nœud 1 : 0
  Nœud 2 : 0
  Nœud 3 : 2.0
  Nœud 4 : 6.0
  Nœud 5 : 8.0
  Nœud 6 : 13.0
  Nœud 7 : 18.0
  Nœud 8 : 27.0
  Nœud 9 : 29.0
  Nœud 10 : 9.0
  Nœud 11 : 8.0
  Nœud 12 : 6.0
  Nœud 13 : 18.0
  Nœud 14 : 34.0

Calendrier au plus tard (dates_max) :
  Nœud 0 : 0.0
  Nœud 1 : 0.0
  Nœud 2 : 1.0
  Nœud 3 : 2.0
  Nœud 4 : 6.0
  Nœud 5 : 8.0
  Nœud 6 : 13.0
  Nœud 7 : 18.0
  Nœud 8 : 27.0
  Nœud 9 : 29.0
  Nœud 10 : 33.0
  Nœud 11 : 32.0
  Nœud 12 : 24.0
  Nœud 13 : 25.0
  Nœud 14 : 34.0

Marges :
  Nœud 0 : 0.0
  Nœud 1 : 0.0
  Nœud 2 : 1.0
  Nœud 3 : 0.0
  Nœud 4 : 0.0
  Nœud 5 : 0.0
  Nœud 6 : 0.0
  Nœud 7 : 0.0
  Nœud 8 : 0.0
  Nœud 9 : 0.0
  Nœud 10 : 24.0
  Nœud 11 : 24.0
  Nœud 12 : 18.0
  Nœud 13 : 7.0
  Nœud 14 : 0.0

--- Chemin(s) critique(s) ---
0 -> 1 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 14

Durée totale du projet : 34.0